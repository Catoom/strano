{"name":"Strano","body":"Strano\r\n======\r\n\r\nThe Github backed Capistrano deployment management UI.\r\n\r\nStrano allows you to run any capistrano task via a clean and simple web interface.\r\nSimply create a project from any of your Github repositories, and Strano will use\r\nthe Capistrano configuration within the repository itself. Which means you don't\r\nhave to set up Capistrano twice, and you can still run capistrano tasks from the\r\ncommand line without fear of different configurations being used, causing\r\nconflicted deploys.\r\n\r\nAll tasks are recorded, so you can look back and see a full history of who did\r\nwhat and when. I also plan on creating a Capistrano plugin, that will record all\r\ncommand line task activity with Strano. Which means your task history will also\r\ninclude the tasks that you ran on the command line.\r\n\r\nStrano is in production use at ShermansTravel, but is still in active development.\r\nSo I need your help to improve and ensure the code is top quality. So I encourage\r\nany and all pull requests. Fork away!\r\n\r\n![Task History](https://img.skitch.com/20120119-rk61yn6u4gt73s9kic829513py.jpg)\r\n\r\nInstallation\r\n------------\r\n\r\nStrano is simply a Rails app with a Resque backend for processing background jobs.\r\nClone the repo from [Github](https://github.com/joelmoss/strano) and run:\r\n\r\n    script/bootstrap\r\n\r\nThen start the app:\r\n\r\n    bundle exec rails s\r\n\r\n**NOTE** Strano cannot be run on Heroku, as the project repositories have to cloned\r\nto a local directory in your app at `vendors/repos`.\r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\nStrano requires that you define only three configuration variables. The rest are\r\noptional, but can be overridden. You can either create a config/strano.yml\r\nconfiguration file and define them in there, or you can define them in the `ENV`\r\nvariable. See `config/strano.example.yml` for all possible configuration variables.\r\n\r\nThe following are required and should be defined before running Strano.\r\n\r\n- Github Key and Secret\r\n\r\n  Create a [Github application](https://github.com/settings/applications) and copy\r\n  the generated key and secret to: `github_key` and `github_secret`.\r\n\r\n- Public SSH key\r\n\r\n  In order to clone repositories from Github, it requires a public SSH key be\r\n  defined in `public_ssh_key`.\r\n\r\n\r\nBackground Processing\r\n---------------------\r\n\r\nBackground processing of tasks and repo management is taken care of by the excellent [Sidekiq](https://github.com/mperham/sidekiq). Run\r\nthe queue like this:\r\n\r\n    bundle exec sidekiq\r\n\r\nYou can then monitor your queue at `http://YOUR-STRANO-APP/sidekiq`. Check out the [Sidekiq Wiki](https://github.com/mperham/sidekiq/wiki) for assistance on Sidekiq and its options.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nStrano is released under the MIT license:\r\n\r\n* http://www.opensource.org/licenses/MIT\r\n\r\n\r\nContributing\r\n------------\r\n\r\nRead the [Contributing][cb] wiki page first.\r\n\r\nOnce you've made your great commits:\r\n\r\n1. [Fork][1] Strano\r\n2. Create a topic branch - `git checkout -b my_branch`\r\n3. Push to your branch - `git push origin my_branch`\r\n4. Create a [Pull Request](http://help.github.com/pull-requests/) from your branch\r\n5. That's it!\r\n","tagline":"Capistrano and Github sittin' in a tree...","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}